#+TITLE: Notes
#+AUTHOR: chodkows

* TABLE OF CONTENT :toc:
- [[#install-doom-emacs][Install Doom Emacs]]
  -  [[#git-223][Git 2.23+]]
  -  [[#emacs-271-272-is-recommended-or-native-comp][Emacs 27.1+ (27.2 is recommended, or native-comp).]]
  -  [[#ripgrep-110][ripgrep 11.0+]]
  -  [[#gnu-find][GNU find]]
  -  [[#optional-fd-730-improves-file-indexing-performance-for-some-commands][OPTIONAL: fd 7.3.0+ (improves file indexing performance for some commands)]]
- [[#test-go-in-org-mode][Test Go in org mode]]
- [[#test-sudo-with-bash][Test sudo with bash]]
- [[#test-sudo-with-bash-and-tramp][Test sudo with bash and tramp]]
- [[#how-to-prepare-bootable-pendrive-on-linuxoption-1][How to prepare bootable pendrive on linux(Option 1)]]
  - [[#check-pendrive-is-visible-in-system][Check pendrive is visible in system]]
  - [[#unmount-pendrive][Unmount pendrive]]
  - [[#write-iso-to-pendrivewill-block-emacs-for-time-of-writing][Write ISO to pendrive(will block emacs for time of writing)]]
- [[#how-to-prepare-bootable-pendrive-on-linuxoption-2][How to prepare bootable pendrive on linux(Option 2)]]
  - [[#check-block-devices][Check block devices]]
  - [[#unmount-pendrive-1][Unmount pendrive]]
  - [[#remove-data-from-pendrive][Remove data from pendrive]]
  - [[#write-iso-to-pendrive][Write ISO to pendrive]]
- [[#linux-namespace-networking][Linux namespace networking]]
- [[#environment][Environment]]
  - [[#saas-aware-video-module][SaaS-Aware-Video-Module]]

* Install Doom Emacs
**  Git 2.23+
#+begin_src bash
sudo pacman -S git
#+end_src
**  Emacs 27.1+ (27.2 is recommended, or native-comp).
#+begin_src bash
sudo pacman -S emacs
#+end_src
**  ripgrep 11.0+
#+begin_src bash
sudo pacman -S rg
#+end_src
**  GNU find
Should be already installed.
**  OPTIONAL: fd 7.3.0+ (improves file indexing performance for some commands)
#+begin_src bash
sudo pacman -S fd
#+end_src

* Test Go in org mode
Need to install by: M-x -> package install -> ob-go
And restart doom by: M-x -> doom/reload
#+begin_src go :imports "fmt"
fmt.Println("Hello World!")
#+end_src

#+RESULTS:
: Hello World!

* Test sudo with bash
#+begin_src bash :var pw=(read-passwd "Password: ")
echo $pw | sudo -S echo "hello"
#+end_src

#+RESULTS:
: hello

* Test sudo with bash and tramp
#+begin_src bash :dir /sudo::
sudo echo "hello"
#+end_src

#+RESULTS:
: hello

* How to prepare bootable pendrive on linux(Option 1)
** Check pendrive is visible in system
#+begin_src bash
df -h
#+end_src

#+RESULTS:
| Filesystem                | Size | Used | Avail | Use% | Mounted                   | on |
| tmpfs                     | 763M | 2,0M | 761M  |   1% | /run                      |    |
| /dev/mapper/vgubuntu-root | 467G | 149G | 294G  |  34% | /                         |    |
| tmpfs                     | 3,8G | 0    | 3,8G  |   0% | /dev/shm                  |    |
| tmpfs                     | 5,0M | 4,0K | 5,0M  |   1% | /run/lock                 |    |
| /dev/nvme0n1p2            | 704M | 171M | 482M  |  27% | /boot                     |    |
| /dev/nvme0n1p1            | 511M | 73M  | 439M  |  15% | /boot/efi                 |    |
| tmpfs                     | 763M | 124K | 763M  |   1% | /run/user/1000            |    |
| /dev/sda1                 | 760M | 760M | 0     | 100% | /media/wojtek/ARCH_202111 |    |

** Unmount pendrive
#+begin_src bash :dir /sudo::
sudo umount /dev/sda1
#+end_src

#+RESULTS:

** Write ISO to pendrive(will block emacs for time of writing)
#+begin_src bash :dir /sudo::
sudo dd bs=4M if=/home/wojtek/ISO/arcolinuxb-leftwm-v22.01.10-x86_64.iso of=/dev/sda status=progress oflag=sync
#+end_src

#+RESULTS:

* How to prepare bootable pendrive on linux(Option 2)
** Check block devices
#+begin_src bash
lsblk | grep -v loop
#+end_src

#+RESULTS:
| NAME        | MAJ:MIN | RM | SIZE   | RO | TYPE | MOUNTPOINTS |
| nvme1n1     |   259:0 |  0 | 232,9G |  0 | disk |             |
| ├─nvme1n1p1 |   259:1 |  0 | 300M   |  0 | part | /boot/efi   |
| ├─nvme1n1p2 |   259:2 |  0 | 223,8G |  0 | part | /           |
| └─nvme1n1p3 |   259:3 |  0 | 8,8G   |  0 | part | [SWAP]      |
| nvme0n1     |   259:4 |  0 | 476,9G |  0 | disk |             |
| ├─nvme0n1p1 |   259:5 |  0 | 512M   |  0 | part |             |
| ├─nvme0n1p2 |   259:6 |  0 | 732M   |  0 | part |             |
| └─nvme0n1p3 |   259:7 |  0 | 475,7G |  0 | part |             |

** Unmount pendrive
#+begin_src bash
umount /dev/sda1
#+end_src

** Remove data from pendrive
#+begin_src bash
wipels --all /dev/sda
#+end_src

** Write ISO to pendrive
#+begin_src bash
cat /path/to/iso > /dev/sda
#+end_src

* Linux namespace networking
Network namespaces are use by containers to separete networking.
Process on container will have pid 1, but the same process in host
will have another pid.
#+begin_src bash
ps aux | grep nginx
#+end_src

#+RESULTS:
: chodkows    2402  0.0  0.0   9028  2640 ?        S    05:50   0:00 grep nginx

Host has own interface to communicate to LAN - eth0.
Host also has own arp and route table to store network information.
When container is created, there is created namespece.
Then container also have own arp and route table.

To create network ns:
#+begin_src bash :dir /sudo:: :results none
sudo ip netns add red
sudo ip netns add blue
#+end_src

Check ip netns
#+begin_src bash
ip netns
#+end_src

#+RESULTS:
| blue |
| red  |

To list interfaces in host:
#+begin_src bash
ip -br link
#+end_src

#+RESULTS:
| lo               UNKNOWN        00:00:00:00:00:00 <LOOPBACK    | UP         | LOWER_UP> |           |
| enp0s31f6        DOWN           70:85:c2:62:20:01 <NO-CARRIER  | BROADCAST  | MULTICAST | UP>       |
| wlp0s20f0u10     UP             74:da:38:c8:05:21 <BROADCAST   | MULTICAST  | UP        | LOWER_UP> |
| veth-blue@veth-red DOWN           26:7b:c5:f8:fe:bd <BROADCAST | MULTICAST  | M-DOWN>   |           |
| veth-red@veth-blue DOWN           7e:92:71:8f:61:fd <BROADCAST | MULTICAST  | M-DOWN>   |           |
| v-enp2s0@if8     DOWN           5e:2e:24:5b:9f:24 <BROADCAST   | MULTICAST> |           |           |

To list interfaces in namespace:
#+begin_src bash :dir /sudo::
ip netns exec red ip -br link
#+end_src

#+RESULTS:
| lo               DOWN           00:00:00:00:00:00 <LOOPBACK> |           |    |           |
| veth-red@if4     UP             7e:92:71:8f:61:fd <BROADCAST | MULTICAST | UP | LOWER_UP> |

Or simpler:
#+begin_src bash :dir /sudo::
ip -br -n red link
#+end_src

#+RESULTS:
| lo               DOWN           00:00:00:00:00:00 <LOOPBACK> |           |    |           |
| veth-red@if4     UP             7e:92:71:8f:61:fd <BROADCAST | MULTICAST | UP | LOWER_UP> |

In namespaces there is visible only loopback interface. There is no other interface from host.
The same is for arp and route table.

Arp table for host:
#+begin_src bash
arp
#+end_src

#+RESULTS:
| Address  | HWtype | HWaddress         | Flags | Mask         | Iface |
| _gateway | ether  | 00:12:2a:b6:a1:a1 | C     | wlp0s20f0u10 |       |

Arp for namespece
#+begin_src bash :dir /sudo:: :results none
ip netns exec red arp
#+end_src

#+RESULTS:

Route for host:
#+begin_src bash
route
#+end_src

#+RESULTS:
| Kernel      | IP       |       routing | table |        |     |     |              |
| Destination | Gateway  |       Genmask | Flags | Metric | Ref | Use | Iface        |
| default     | _gateway |       0.0.0.0 | UG    |    600 |   0 |   0 | wlp0s20f0u10 |
| 192.168.1.0 | 0.0.0.0  | 255.255.255.0 | U     |    600 |   0 |   0 | wlp0s20f0u10 |

Route for namespece:
#+begin_src bash :dir /sudo:: :results none
ip netns exec red route
#+end_src

To connect to namespaces there is neccecery to create pipe or "virtual cabel" between them:
#+begin_src bash :dir /sudo:: :results none
ip link add veth-red type veth peer name veth-blue
#+end_src
#+begin_src bash :dir /sudo:: :results none
ip link set veth-blue up
ip link set veth-red up
#+end_src

Check links:
#+begin_src bash
ip -br link
#+end_src

#+RESULTS:
| lo               UNKNOWN        00:00:00:00:00:00 <LOOPBACK    | UP         | LOWER_UP> |           |
| enp0s31f6        DOWN           70:85:c2:62:20:01 <NO-CARRIER  | BROADCAST  | MULTICAST | UP>       |
| wlp0s20f0u10     UP             74:da:38:c8:05:21 <BROADCAST   | MULTICAST  | UP        | LOWER_UP> |
| veth-blue@veth-red UP             26:7b:c5:f8:fe:bd <BROADCAST | MULTICAST  | UP        | LOWER_UP> |
| veth-red@veth-blue UP             7e:92:71:8f:61:fd <BROADCAST | MULTICAST  | UP        | LOWER_UP> |
| v-enp2s0@if8     DOWN           5e:2e:24:5b:9f:24 <BROADCAST   | MULTICAST> |           |           |

Attach red cabel to red namespace:
#+begin_src bash :dir /sudo:: :results none
ip link set veth-red netns red
#+end_src

Attach blue cabel to blue namespace:
#+begin_src bash :dir /sudo:: :results none
ip link set veth-blue netns blue
#+end_src

#+begin_src bash :dir /sudo::
ip -br -n red link
ip -br -n blue link
#+end_src

#+RESULTS:
| lo            | DOWN | 00:00:00:00:00:00 | <LOOPBACK>                        |
| veth-red@if4  | UP   | 7e:92:71:8f:61:fd | <BROADCAST,MULTICAST,UP,LOWER_UP> |
| lo            | DOWN | 00:00:00:00:00:00 | <LOOPBACK>                        |
| veth-blue@if5 | UP   | 26:7b:c5:f8:fe:bd | <BROADCAST,MULTICAST,UP,LOWER_UP> |

Add address ip for both cabels:
#+begin_src bash :dir /sudo::
ip -n red addr add 192.168.15.1 dev veth-red
ip -n blue addr add 192.168.15.2 dev veth-blue
#+end_src

#+RESULTS:

#+begin_src bash :dir /sudo::
ip -br -n red a | grep -v lo
ip -br -n blue a | grep -v lo
#+end_src

#+RESULTS:
| veth-red@if4  | UP | 192.168.15.1/32 | fe80::7c92:71ff:fe8f:61fd/64 |
| veth-blue@if5 | UP | 192.168.15.2/32 | fe80::247b:c5ff:fef8:febd/64 |

Switch on both devices:
#+begin_src bash :dir /sudo:: :results none
ip -n red link set veth-red up
ip -n blue link set veth-blue up
#+end_src

#+begin_src bash :dir /sudo::
ip -br -n red a | grep -v lo
ip -br -n blue a | grep -v lo
#+end_src

#+RESULTS:
| veth-red@if4  | UP | 192.168.15.1/32 | fe80::7c92:71ff:fe8f:61fd/64 |
| veth-blue@if5 | UP | 192.168.15.2/32 | fe80::247b:c5ff:fef8:febd/64 |

Check connection between namespaces
#+begin_src bash :dir /sudo:: :results none
ip netns exec red ping -c 3 192.168.15.2
#+end_src

#+RESULTS:

#+begin_src bash :dir /sudo::
ip netns exec blue arp
#+end_src

#+RESULTS:


* Environment
** SaaS-Aware-Video-Module
Name                                CloudName    SubscriptionId                        State    IsDefault
----------------------------------  -----------  ------------------------------------  -------  -----------
MSI-SWE-PARTNER-STAGE-AZURECLOUD-0  AzureCloud   74545c1b-2b6d-4324-acda-bd921793e015  Enabled  True
MSI-SWE-CIE-STAGE-AZURECLOUD        AzureCloud   d521004d-004e-4013-bb23-fe359ac90321  Enabled  False
MSI-SWE-CIE-QA                      AzureCloud   29630a06-fdc5-486d-99c3-8ea14aa8cd2e  Enabled  False
